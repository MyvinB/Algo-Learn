/*Merge Two Sorted Lists
Easy

3181

466

Add to List

Share
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4*/
  class ListNode {
      int val;
      ListNode next;
      ListNode(int x) { val = x; }
 }

public class MergeLinkedList {
	
	static ListNode l1;
	static ListNode l2;

	static  ListNode temp;
	  static void setNodes(int value){
	        if(l1==null){
	            l1=new ListNode(value);
	            temp=l1;
	        }
	        else{
	        	temp.next=new ListNode(value);
	        	temp=temp.next;
	        }
	    }


	static ListNode mergeTwoLists(ListNode l1, ListNode l2) {
		ListNode l3=new ListNode(0);
		ListNode head=l3;
		while(l1!=null||l2!=null){
			if(l1==null){
				l3.next=new ListNode(l2.val);
				l3=l3.next;
				l2=l2.next;
				continue;
			}
			if(l2==null){
				l3.next=new ListNode(l1.val);
				l3=l3.next;
				l1=l1.next;
				continue;
			}
			
			if(l1.val<l2.val){
				l3.next=new ListNode(l1.val);
				l3=l3.next;
				l1=l1.next;
			}
			else if(l1.val>l2.val){
				l3.next=new ListNode(l2.val);
				l3=l3.next;
				l2=l2.next;
			}
			else{
				l3.next=new ListNode(l2.val);
				l3=l3.next;
				l3.next=new ListNode(l2.val);
				l3=l3.next;
				l1=l1.next;
				l2=l2.next;
			}
		}
		head=head.next;
		return head;
    }
	
	
	public static void main(String[] args) {
		System.out.println("Run check");
		setNodes(1);
		setNodes(3);
		setNodes(4);
	//	setNodes(5);
		l2=l1;
		l1=null;
		setNodes(1);
		setNodes(2);
		setNodes(4);
		setNodes(5);
//		temp=l1;
//		
//		while(temp!=null){
//			System.out.println(temp.val);
//			temp=temp.next;
//		}
//		temp=l2;
//		while(temp!=null){
//			System.out.println(temp.val);
//			temp=temp.next;
//		}
		
		temp=mergeTwoLists(l1, l2);
		
		while(temp!=null){
			System.out.println(temp.val);
			temp=temp.next;
		}

		
	}
	
}
